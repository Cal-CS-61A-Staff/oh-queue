"""Assignment, location configuration

Revision ID: 7f68eed434ab
Revises: 42d3400175b3
Create Date: 2019-03-06 16:24:48.445773

"""

# revision identifiers, used by Alembic.
revision = '7f68eed434ab'
down_revision = '42d3400175b3'

from alembic import op
import sqlalchemy as sa
from sqlalchemy import orm
from sqlalchemy.dialects import mysql
from sqlalchemy.ext.declarative import declarative_base

BaseTable = declarative_base()

class Assignment(BaseTable):
    __tablename__ = 'assignment'
    id = sa.Column(sa.Integer, primary_key=True)
    created = sa.Column(sa.DateTime, default=sa.func.now())
    name = sa.Column(sa.String(255), nullable=False, unique=True)
    visible = sa.Column(sa.Boolean, default=False)

class Location(BaseTable):
    __tablename__ = 'location'
    id = sa.Column(sa.Integer, primary_key=True)
    created = sa.Column(sa.DateTime, default=sa.func.now())
    name = sa.Column(sa.String(255), nullable=False, unique=True)
    visible = sa.Column(sa.Boolean, default=False)

class TicketHelper(BaseTable):
    __tablename__ = 'ticket'

    id = sa.Column(sa.Integer, primary_key=True)

    assignment_name = sa.Column('assignment', sa.String(length=255))
    assignment_id = sa.Column(sa.ForeignKey('assignment.id'))

    location_name = sa.Column('location', sa.String(length=255))
    location_id = sa.Column(sa.ForeignKey('location.id'))

    assignment = orm.relationship(Assignment, backref='ticket')
    location = orm.relationship(Location, backref='ticket')

def upgrade():
    # Get alembic DB bind
    connection = op.get_bind()
    session = orm.Session(bind=connection)

    # Custom migrations
    ## Create new tables
    Assignment.__table__.create(connection)
    Location.__table__.create(connection)
    ## Create new columns
    op.add_column('ticket', sa.Column('assignment_id', sa.Integer(), nullable=False))
    op.add_column('ticket', sa.Column('location_id', sa.Integer(), nullable=False))
    ## Add existing assignments
    assignment_names = [name.strip() for [name] in session.query(TicketHelper.assignment_name).distinct()]
    assignments = {name: Assignment(name=name) for name in assignment_names}
    session.add_all(assignments.values())
    ## Add existing locations
    location_names = [name.strip() for [name] in session.query(TicketHelper.location_name).distinct()]
    locations = {name: Location(name=name) for name in location_names}
    session.add_all(locations.values())
    ## Set assignment, location ID based on name
    for ticket in session.query(TicketHelper):
        ticket.assignment = assignments[ticket.assignment_name]
        ticket.location = locations[ticket.location_name]
    session.commit()

    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('ticket', 'question',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               nullable=False)
    op.create_index(op.f('ix_ticket_assignment_id'), 'ticket', ['assignment_id'], unique=False)
    op.create_index(op.f('ix_ticket_location_id'), 'ticket', ['location_id'], unique=False)
    op.create_foreign_key('fk_ticket_assignment_id', 'ticket', 'assignment', ['assignment_id'], ['id'])
    op.create_foreign_key('fk_ticket_location_id', 'ticket', 'location', ['location_id'], ['id'])
    op.drop_column('ticket', 'location')
    op.drop_column('ticket', 'assignment')
    # ### end Alembic commands ###


def downgrade():
    # Get alembic DB bind
    connection = op.get_bind()
    session = orm.Session(bind=connection)

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ticket', sa.Column('assignment', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=False))
    op.add_column('ticket', sa.Column('location', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=False))
    op.drop_constraint('fk_ticket_location_id', 'ticket', type_='foreignkey')
    op.drop_constraint('fk_ticket_assignment_id', 'ticket', type_='foreignkey')
    op.drop_index(op.f('ix_ticket_location_id'), table_name='ticket')
    op.drop_index(op.f('ix_ticket_assignment_id'), table_name='ticket')
    op.alter_column('ticket', 'question',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               nullable=True)

    # Custom migrations
    ## Populate assignment and location columns
    for ticket in session.query(TicketHelper):
        ticket.assignment_name = ticket.assignment.name
        ticket.location_name = ticket.location.name
    session.commit()

    op.drop_column('ticket', 'location_id')
    op.drop_column('ticket', 'assignment_id')
    op.drop_table('location')
    op.drop_table('assignment')
    # ### end Alembic commands ###
